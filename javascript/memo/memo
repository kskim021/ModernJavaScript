1. 프로그래밍이란 
기계가 실행 할 수 있도록 정확하고 상세하게 요구사항을 설명하는 작업 

2. 자바스크립트 
ECMAScript 는 자바스크립트의 표준 사양을 말함.

3. Ajax
서버와 브라우저가 비동기 방식으로 데이터를 교환하는 기능 

4. JQuery
DOM 을 쉽게 제어하는 기능 

5. V8 자바스크립트 엔진
성능의 향상

6. Node.js
V8 자바스크립트 엔진으로 빌드된 자바스크립트 런타임 환경
자바스크립트 엔진을 브라우저에서 독립시킨 실행 환경
다양한 모듈, 파일시스템, HTTP 등 빌트인(built-in, 내장) API 제공

Node.js는 비동기 I/O를 지원, 단일 스레드 이벤트 루프 기반으로 동작,
SPA(Single Page Application)에 적합

7. SPA 프레임워크 
Angular, React, Vue.js, Svelte 

8. 자바스크립트 특징 
웹 브라우저에서 동작하는 유일한 프로그래밍 언어 
일급 함수 : 함수가 다른 일급객체와 동일하게 다루어 지는것 
일급 객체 : 변수나 데이터에 할당 가능, 인자로 넘기기 가능, 리턴값으로 리턴가능 

* 자바스크립트나 파이썬의 함수는 일급 함수이다.

Ex) 
# 변수에 할당
const foo = function() {
   console.log("foobar");
}
// 변수를 사용해 호출
foo();

# 인자로 전달 
function sayHello() {
   return "Hello, ";
}
function greeting(helloMessage, name) {
  console.log(helloMessage() + name);
}
// `sayHello`를 `greeting` 함수에 인자로 전달
greeting(sayHello, "JavaScript!");

# 함수를 반환
function sayHello() {
   return function() {
      console.log("Hello!");
   }
}


개발자가 별도의 컴파일 작업을 수행하지 않는 인터프리터 언어(소스코드를 바로 실행)다.

자바스크립트는 멀티 패러다임 프로그래밍 언어

9. ES6 브라우저 지원 현황
익스플러로를 제외한 대부분의 모던 브라우저는 ES6을 지원하지만 100%는 아님.
Node.js는 v4 부터 ES6를 지원
바벨(Babel)과 같은 트랜스파일러를 사용 가능


10. 자바스크립트 실행 환경
모든 브라우저에는 자바스크립트를 실행할 수 있는 자바스크립트 엔진을 내장하고 있음.
Node.js도 자바스크립트 엔진을 내장.

브라우저는 HTML, CSS, 자바스크립트를 실행하여 웹페이지를 랜더링 하고
Node.js는 브라우저 외부에서 자바스크립트 실행 환경을 제공 한다.


11. NPM 
npm은 자바스크립트 패키지 매니저 
Node.js에서 사용할 수 있는 모듈들을 패키지화해서 모아둔 저장소 역할,
패키지 설치 및 관리를 위한 CLI(Command Line Interface) 제공


12. vsCode 사용
CodeRunner 라이브러리


13. 변수 (값이 저장된 메모리 공간)
변수는 프로그래밍 언어에서 데이터를 관리하기 위한 핵심 개념.
하나의 값을 저장하기 위해 메모리 공간 자체를 식별하기 위해 붙인 이름.
* CPU에서 연산, 메모리에서 저장이나 읽기(바이트 단위) 재사용 안됨
* 메모리에 저장되는 모든 값은 2진수!

변수 이름은 가독성을 높이는 부수적인 효과!


14. 식별자  (변수, 함수, 클래스 등)
값을 구별해서 식별할 수있는 고유한 이름
값은 메모리 공간에 저장됨
식별자는 값이 아니라 메모리 주소를 기억한다.


15. 변수 선언
var 전역변수
const, let 지역변수

undefined는 원시타입의 값.

선언 단계 : 변수 이름 할달
초기화 단계 : 메모리 공간을 확보하고 undefined를 할당해 초기화



